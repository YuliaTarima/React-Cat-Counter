{"version":3,"sources":["logo.jpg","components/Header.js","components/Footer.js","components/Counter.js","components/AddCounter.js","components/ConfirmDeleteCat.jsx","App.js","index.js"],"names":["module","exports","Header","props","className","icon","Footer","href","target","rel","Date","getFullYear","src","logo","alt","Counter","counter","id","name","livesCount","incrementLives","decrementLives","reviveCat","resetCat","removeCat","onClick","AddCounter","useState","setName","count","setCount","type","value","onChange","e","console","log","window","confirm","addCat","Number","ConfirmDeleteCat","isDisabledDeleteConfirmationButton","setIsDisabledDeleteConfirmationButton","Modal","isOpen","Boolean","toggle","onCancel","ModalHeader","ModalBody","FormGroup","Input","placeholder","inputText","trim","toLowerCase","ModalFooter","Button","color","onSuccess","disabled","library","add","fab","faPaw","faCat","faHeart","faMedkit","faSkullCrossbones","faTimesCircle","faBabyCarriage","App","counters","setCounters","confirmDeleteCatCounter","setConfirmDeleteCatCounter","index","findIndex","el","newCounters","map","msg","valueOf","confirmRemoveCat","Math","random","reduce","previous","current","resetAllCats","reviveAllCats","key","onSubmit","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87d3f8eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.56688d3d.jpg\";","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nfunction Header(props) {\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"header-logo\"><FontAwesomeIcon icon=\"paw\"/></div>\r\n            <div className=\"header-heading\"><h1>Count Cat Lives</h1></div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport logo from \"../logo.jpg\";\r\n\r\nfunction Footer(props) {\r\n\r\n    return (\r\n        <footer>\r\n            <a href=\"http://yuwebdesign.tarima.org/\"\r\n               target=\"_blank\" rel=\"noopener noreferrer\"\r\n            >\r\n                &copy;&nbsp;YuWebdes!gn&nbsp;\r\n                {/*2019 - */}{new Date().getFullYear()}\r\n            </a>\r\n            <a href=\"http://yuwebdesign.tarima.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img src={logo} className=\"App-logo img-fluid\"\r\n                     alt=\"logo\"/>\r\n            </a>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nfunction Counter(props) {\r\n\r\n    const {id, name, livesCount} = props.counter;\r\n    const {counter, incrementLives, decrementLives, reviveCat, resetCat, removeCat} = props;\r\n\r\n    // const countHearts = () => {\r\n    //     let hearts = ' ';\r\n    //     for (let i = 1; i <= livesCount; i++) {\r\n    //         document.write(<FontAwesomeIcon icon=\"heart\"/>);\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className=\"col-sm-6 col-lg-6 col-xs-12\">\r\n            <div className=\"card my-2 m-1\">\r\n                <div className=\"card-body\">\r\n\r\n                    <div className=\"cat-avatar card-img-top\">\r\n                        <FontAwesomeIcon icon=\"cat\"/>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"cat-name card-title\">{name}</p>\r\n                        <div className=\"cat-header \">\r\n                            Lives: {livesCount}\r\n                        </div>\r\n                        <p><strong>Control Lives</strong></p>\r\n                        <p>\r\n                            <button onClick={() => decrementLives(id)}>-\r\n                            </button>\r\n\r\n                            <strong>{livesCount}</strong>&nbsp;\r\n                            <button onClick={() => incrementLives(id)}>+\r\n                            </button>\r\n\r\n                            <button className=\"revive-button\"\r\n                                    onClick={() => reviveCat(name, id)}>\r\n                                <FontAwesomeIcon\r\n                                    icon=\"medkit\"/>{' '} Revive {name}\r\n                            </button>\r\n                        </p>\r\n                        <p>\r\n                            <button className=\"reset-button\"\r\n                                    onClick={() => resetCat(name, id)}>\r\n                                <FontAwesomeIcon\r\n                                    icon=\"skull-crossbones\"/>{' '} Reset {name}\r\n                            </button>\r\n\r\n                            <button className=\"remove-button\"\r\n                                    onClick={() => removeCat(counter)}>\r\n                                <FontAwesomeIcon\r\n                                    icon=\"times-circle\"/>{' '} Remove {name}\r\n                            </button>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Counter;\r\n","import React, {useState} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction AddCounter(props) {\r\n\r\n    const [name, setName] = useState('The Matroskin Cat');\r\n    const [count, setCount] = useState(9);\r\n    // console.log('AddCounter state');\r\n    // console.log(name);\r\n    // console.log(count);\r\n\r\n    const onSubmit = () => {\r\n            console.log('AddCounter onSubmit: name: ' + name + ', count: ' + count);\r\n            if (count > 9) {\r\n                (window.confirm('Maximum cat lives is 9'))\r\n            } else {\r\n                props.addCat(name, Number(count));\r\n                setName(name);\r\n                setCount(Number(count));\r\n            }\r\n        console.log('onSubmit: name: ' + name + ', count: ' + count);\r\n        }\r\n    ;\r\n\r\n    return (\r\n        <div className=\"container border add-counter\">\r\n            <label>Cat Name</label>\r\n            <input type=\"text\" name='name' value={name}\r\n                   onChange={e => setName(e.target.value)}/>\r\n            <label>Cat Lives</label>\r\n            <input type=\"number\" name='count' value={count}\r\n                   onChange={e => setCount(e.target.value)}/>\r\n\r\n\r\n            <button onClick={() => onSubmit(name, count)}><FontAwesomeIcon icon=\"baby-carriage\"/>{' '} Create</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCounter;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    Input,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader\r\n} from 'reactstrap';\r\n\r\nexport default function ConfirmDeleteCat(props) {\r\n\r\n    const [isDisabledDeleteConfirmationButton, setIsDisabledDeleteConfirmationButton] = useState(true);\r\n    console.log('isDisabledDeleteConfirmationButton '+isDisabledDeleteConfirmationButton);\r\n    const modalConfirmationUserInputChange = (e) => {\r\n        const inputText = e.target.value;\r\n        setIsDisabledDeleteConfirmationButton(inputText.trim().toLowerCase() !== props.name.trim().toLowerCase());\r\n    };\r\n\r\n    const deleteButtonClick = () => {\r\n        setIsDisabledDeleteConfirmationButton(true);\r\n        props.onSuccess();\r\n\r\n    };\r\n\r\n    const cancelButtonClick = () => {\r\n        setIsDisabledDeleteConfirmationButton(true);\r\n        props.onCancel();\r\n    };\r\n\r\n    return (\r\n        <Modal isOpen={Boolean(props.name)} toggle={props.onCancel}>\r\n            <ModalHeader>Delete confirmation</ModalHeader>\r\n\r\n            <ModalBody>\r\n\r\n                <p>\r\n                    Enter cat name <strong>{props.name}</strong> to\r\n                    remove it\r\n                </p>\r\n\r\n                <FormGroup>\r\n                    <Input type=\"text\"\r\n                           name=\"cat-name\"\r\n                           id=\"catName\"\r\n                           placeholder=\"Type name to remove\"\r\n                           onChange={modalConfirmationUserInputChange}\r\n\r\n                    />\r\n                </FormGroup>\r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n                <Button color=\"danger\"\r\n                        onClick={deleteButtonClick}\r\n                        disabled={isDisabledDeleteConfirmationButton}>Remove</Button>\r\n\r\n                <Button color=\"secondary\"\r\n                        onClick={cancelButtonClick}>Spare</Button>\r\n            </ModalFooter>\r\n        </Modal>);\r\n}\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Counter from \"./components/Counter\";\r\nimport AddCounter from \"./components/AddCounter\";\r\nimport ConfirmDeleteCat from \"./components/ConfirmDeleteCat\";\r\n\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {fab} from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n    faPaw,\r\n    faCat,\r\n    faHeart,\r\n    faMedkit,\r\n    faSkullCrossbones,\r\n    faTimesCircle,\r\n    faBabyCarriage\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nlibrary.add(fab, faPaw, faCat, faHeart, faMedkit, faSkullCrossbones, faTimesCircle, faBabyCarriage);\r\n\r\nfunction App() {\r\n\r\n    const InitialCountersState = [\r\n        {id: 456, name: 'The Cheshire Cat', livesCount: 9},\r\n        {id: 123, name: 'Cat in The Hat', livesCount: 6},\r\n        {id: 234, name: 'Witches Black Cat', livesCount: 6},\r\n        {id: 345, name: 'Happy Fat Cat', livesCount: 6}\r\n    ];\r\n\r\n    const [counters, setCounters] = useState(InitialCountersState);\r\n    const [confirmDeleteCatCounter, setConfirmDeleteCatCounter] = useState({});\r\n\r\n    const calculateTotalCatLives = () =>\r\n        counters\r\n            .map(el => el.livesCount)\r\n            .reduce((previous, current) => previous + current);\r\n\r\n    const incrementLives = (id) => {\r\n        const index = counters.findIndex(el => el.id === id);\r\n        const newCounters = [...counters];\r\n        newCounters[index].livesCount = newCounters[index].livesCount + 1;\r\n        setCounters(newCounters);\r\n    }\r\n\r\n    const decrementLives = (id) => {\r\n        const newCounters = counters.map(el => {\r\n            if (el.id === id) return {...el, livesCount: el.livesCount - 1};\r\n            return el;\r\n        });\r\n        setCounters(newCounters);\r\n    }\r\n\r\n    const resetCat = (name, id) => {\r\n        const msg = 'Are you sure you want to reset ' + name + ' ?';\r\n        console.log('COUNTERS: ' + counters.map(el => el.livesCount.valueOf()));\r\n        if (window.confirm(msg)) {\r\n            const index = counters.findIndex(el => el.id === id);\r\n            const newCounters = [...counters];\r\n            newCounters[index].livesCount = 0;\r\n            setCounters(newCounters);\r\n        }\r\n    }\r\n\r\n    const resetAllCats = () => {\r\n        const msg = 'Are you sure you want to reset all the Cats?';\r\n        if (window.confirm(msg)) {\r\n            const newCounters = counters.map(el => ({...el, livesCount: 0}));\r\n            setCounters(newCounters);\r\n        }\r\n    }\r\n\r\n    const reviveCat = (name, id) => {\r\n        const msg = 'Are you sure you want to give ' + name + ' 9 lives?';\r\n        if (window.confirm(msg)) {\r\n            const index = counters.findIndex(el => el.id === id);\r\n            const newCounters = [...counters];\r\n            newCounters[index].livesCount = 9;\r\n            setCounters(newCounters);\r\n        }\r\n    }\r\n\r\n    const reviveAllCats = () => {\r\n        const msg = 'Are you sure you want to give every cat 9 lives?';\r\n        if (window.confirm(msg)) {\r\n            const newCounters = counters.map(el => ({...el, livesCount: 9}));\r\n            setCounters(newCounters);\r\n        }\r\n    }\r\n    //**************\r\n    const confirmRemoveCat = counter => {\r\n        setConfirmDeleteCatCounter(counter);\r\n    };\r\n\r\n    const removeConfirmedCat = () => {\r\n        const newCounters = counters.filter(el => el.id !== confirmDeleteCatCounter.id);\r\n        setCounters(newCounters);\r\n        setConfirmDeleteCatCounter({});\r\n    };\r\n    const cancelConfirmRemoveCat = () => {\r\n        setConfirmDeleteCatCounter({})\r\n    };\r\n    //**************\r\n\r\n    // const removeCat = (name, id) => {\r\n    //     const msg = 'Are you sure you want to remove ' + name + ' ?';\r\n    //     if (window.confirm(msg)) {\r\n    //         if (counters.length === 1) {\r\n    //             window.confirm('Can not remove the sole survivor');\r\n    //             return counters;\r\n    //         }\r\n    //         const newCounters = counters.filter(el => el.id !== id);\r\n    //         setCounters(newCounters);\r\n    //     }\r\n    // };\r\n\r\n    const addCat = (name, count) => {\r\n        console.log('AddCat: ' + name + \" \" + count);\r\n        const newCounters = [...counters, {\r\n            id: Math.random(),\r\n            name,\r\n            livesCount: count\r\n        }];\r\n        setCounters(newCounters);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <div id=\"main-container\" className=\"container p-3 my-3 border\">\r\n                <div className=\"container border cat-total\">\r\n                    <strong>Total Lives</strong>: {calculateTotalCatLives()}\r\n\r\n                    <button className=\"reset-button\"\r\n                            onClick={() => resetAllCats()}>\r\n                        <FontAwesomeIcon icon=\"skull-crossbones\"/>{' '} Reset\r\n                        All the Cats\r\n                    </button>\r\n\r\n                    <button className=\"revive-button\"\r\n                            onClick={() => reviveAllCats()}>\r\n                        <FontAwesomeIcon icon=\"medkit\"/>{' '} Revive All the\r\n                        Cats\r\n                    </button>\r\n                </div>\r\n                <div className=\"row row-eq-height\">\r\n                    {counters.map(el => <Counter key={el.id}\r\n                                                 counter={el}\r\n                                                 incrementLives={incrementLives}\r\n                                                 decrementLives={decrementLives}\r\n                                                 resetCat={resetCat}\r\n                                                 reviveCat={reviveCat}\r\n                                                 removeCat={confirmRemoveCat}\r\n                    />)}\r\n                </div>\r\n                <AddCounter onSubmit={() => addCat()} addCat={addCat}/>\r\n                <ConfirmDeleteCat\r\n                    name={confirmDeleteCatCounter.name}\r\n                    onSuccess={removeConfirmedCat}\r\n                    onCancel={cancelConfirmRemoveCat}\r\n                />\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}